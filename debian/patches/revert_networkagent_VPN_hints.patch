From aa833adc421ff2da731d68c2199feb1183a33dd3 Mon Sep 17 00:00:00 2001
From: Tim Lunn <tim@feathertop.org>
Date: Wed, 15 Oct 2014 11:05:35 +1100
Subject: [PATCH] Revert "networkAgent: pass VPN hints to auth dialogs"

This reverts commit 926de53c0cbd7ae59e89b386f8d02ae7ecde1b75.
---
 js/ui/components/networkAgent.js | 19 ++-----------------
 1 file changed, 2 insertions(+), 17 deletions(-)

diff --git a/js/ui/components/networkAgent.js b/js/ui/components/networkAgent.js
index 2a3412d..1f40afd 100644
--- a/js/ui/components/networkAgent.js
+++ b/js/ui/components/networkAgent.js
@@ -380,12 +380,6 @@ const VPNRequestHandler = new Lang.Class({
             argv.push('-i');
         if (flags & NMClient.SecretAgentGetSecretsFlags.REQUEST_NEW)
             argv.push('-r');
-        if (authHelper.supportsHints) {
-            for (let i = 0; i < hints.length; i++) {
-                argv.push('-t');
-                argv.push(hints[i]);
-            }
-        }
 
         this._newStylePlugin = authHelper.externalUIMode;
 
@@ -604,9 +598,7 @@ const NetworkAgent = new Lang.Class({
     Name: 'NetworkAgent',
 
     _init: function() {
-        this._native = new Shell.NetworkAgent({ identifier: 'org.gnome.Shell.NetworkAgent',
-                                                capabilities: NMClient.SecretAgentCapabilities.VPN_HINTS
-                                              });
+        this._native = new Shell.NetworkAgent({ identifier: 'org.gnome.Shell.NetworkAgent' });
 
         this._dialogs = { };
         this._vpnRequests = { };
@@ -706,23 +698,16 @@ const NetworkAgent = new Lang.Class({
                     let service = keyfile.get_string('VPN Connection', 'service');
                     let binary = keyfile.get_string('GNOME', 'auth-dialog');
                     let externalUIMode = false;
-                    let hints = false;
-
                     try {
                         externalUIMode = keyfile.get_boolean('GNOME', 'supports-external-ui-mode');
                     } catch(e) { } // ignore errors if key does not exist
-
-                    try {
-                        hints = keyfile.get_boolean('GNOME', 'supports-hints');
-                    } catch(e) { } // ignore errors if key does not exist
-
                     let path = binary;
                     if (!GLib.path_is_absolute(path)) {
                         path = GLib.build_filenamev([Config.LIBEXECDIR, path]);
                     }
 
                     if (GLib.file_test(path, GLib.FileTest.IS_EXECUTABLE))
-                        this._vpnBinaries[service] = { fileName: path, externalUIMode: externalUIMode, supportsHints: hints };
+                        this._vpnBinaries[service] = { fileName: path, externalUIMode: externalUIMode };
                     else
                         throw new Error('VPN plugin at %s is not executable'.format(path));
                 } catch(e) {
-- 
2.1.0


